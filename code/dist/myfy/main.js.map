{"version":3,"sources":["./src/app/toolbar/toolbar.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAiBO,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QAZ3B,yEAA4B;QAGxB,yEAA0B;QACxB,uEAAuB;QACrB,oEAAuC;QACzC,4DAAI;QACN,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACbV;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACA5D,MAAM,YAAY;IAbzB;QAcE,UAAK,GAAG,yCAAyC,CAAC;KACnD;;wEAFY,YAAY;4FAAZ,YAAY;QATvB,yEAA2B;QAG3B,2EAA+B;;;;;;;;;;;;;;ACRjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACC;AAEgB;AAC5B;AACgB;;;AAiBxD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0EAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY,yEAEZ,2EAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,0EAAgB;;;;;;;;;;;;;ACjBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACE;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC5C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;AAGjB,MAAM,iBAAiB,GAAG,CAAC,qEAAc,CAAC;;;;;;;;;;;;;;;;;ACL1C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCJ3B,0EAAgB;QAChB,uEAAM;QACF,qEAAwB;QACxB,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,qEAAiB;QACjB,qEAAoE;QACpE,qEAAyB;QAI7B,4DAAO;QACP,uEAAM;QACF,yEAAQ;QACJ,sEAAI;QACA,wEACJ;QAAA,4DAAK;QACT,4DAAS;QAGT,wEAAM;QACF,uEAAK;QACD,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,uEAAkD;QAElD,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,uEAAwD;QAC5D,4DAAM;QACN,uEAAK;QAED,yEAAO;QACH,uEAA2C;QAAC,wEAChD;QAAA,4DAAQ;QACZ,4DAAM;QAEN,6EAAsB;QAAA,wEAAY;QAAA,4DAAS;QAC/C,4DAAO;QAKX,4DAAO;QACP,4DAAO;;;;;;;;;;;;;;;;;;;;AC7CwC;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  template: `\n  <nav class=\"navbar is-dark\">\n\n      <!-- logo -->\n      <div class=\"navbar-brand\">\n        <a class=\"navbar-item\">\n          <img src=\"assets/img/angular-logo.png\">\n        </a>\n      </div>\n    </nav>\n  `,\n  styles: []\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <!-- toolbar -->\n  <app-toolbar></app-toolbar>\n\n  <!-- routes will be go here -->\n  <router-outlet></router-outlet>\n\n  `,\n  styles: []\n})\n\nexport class AppComponent {\n  title = 'MyFy - One place for all your finances.';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    ToolbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [LoginComponent]","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: [ './login.component.css'\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<!doctype html>\n\n<!--Lavante Hammond-->\n\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\" />\n    <title>Login | Myfy </title>\n    <base href=\"/\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial scale=1\">\n    <link rel=\"#\" href=\"#\" /> \n    <style>\n\n    </style>\n</head>\n<body>\n    <header>\n        <h2>\n            Login Page\n        </h2>\n    </header>\n    \n    <!--Login form component-->\n    <form>\n        <div>\n            <label>Email</label>\n            <input type=\"text\" placeholder=\"Email\" required />\n\n            <label>Password</label>\n            <input type=\"password\" placeholder=\"Password\" required/>\n        </div>\n        <div>\n            \n            <label>\n                <input type=\"checkbox\" checked=\"checked\" /> Remeber Me\n            </label>\n        </div>\n\n        <button type=\"submit\">Let's Budget</button>\n    </form>\n\n    <script>\n\n    </script>\n</body>\n</html>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}